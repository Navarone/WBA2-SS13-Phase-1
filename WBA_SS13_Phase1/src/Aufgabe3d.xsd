<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.example.org/Aufgabe3d" xmlns:tns="http://www.example.org/Aufgabe3d" elementFormDefault="qualified">
	<xs:element name="Rezepte">
		<xs:complexType>
			<xs:sequence>
				<!-- Es muss mindestens ein Rezept erstellt werden, damit es sinn macht. Es können aber unbegrenzt Rezepte hinzugefügt werden. -->
				<xs:element name="Rezept" maxOccurs="unbounded" minOccurs="1">
					<xs:complexType>
						<xs:sequence>
							<!-- Titel kann und muss ein mal vergeben werden, der Untertitel ist jedoch optional, da er nicht in jedem Rezept verwendet wird.
								 Werden minOccurs und macOccurs weggelassen, sind die Standardwerte bei beidem auf 1. -->
							<xs:element name="Titel" type="xs:string" maxOccurs="1" minOccurs="1"/>
							<xs:element name="Untertitel" type="xs:string" minOccurs="0" maxOccurs="1"/>
							<xs:element name="Autor" type="xs:string"/>
							<!-- Bilder werden extern gelagert und können somit als Link angegeben werden. -->
							<xs:element name="Bild" type="xs:anyURI" minOccurs="0"/>
							<!-- Zutaten setzt sich aus einzelnen Zutaten zusammen. -->
							<xs:element name="Zutaten">
								<xs:complexType>
									<xs:sequence>
										<!-- Es ist durch das "unbounded" möglich so viele Zutaten wie benötigt hinzuzufügen. -->
										<xs:element name="Zutat" maxOccurs="unbounded">
											<xs:complexType>
												<!-- Bezeichnung ist zwingend erforderlich, demnach als "required" gekennzeichnet, im Gegensatz zu Menge und Einheit, die hier optional sind. Bsp. siehe Rezept 2. 
													 Bei Attributen kann man minOccurs o.ä. nicht nutzen, demnach muss mit "use" gearbeitet werden. -->
												<xs:attribute name="Bezeichnung" type="xs:string" use="required"/>
												<xs:attribute name="Menge" type="xs:float" use="optional"/>
												<xs:attribute name="Einheit" use="optional">
													<xs:simpleType>
														<!-- Dem Attribut Einheit sind enumarations zugeordnet, um die Auswahl der Einheiten zu beschränken. -->
														<xs:restriction base="xs:string">
															<xs:enumeration value="g"/>
															<xs:enumeration value="TL"/>
															<xs:enumeration value="Pkt."/>
															<xs:enumeration value="Stk."/>
															<xs:enumeration value="ml"/>
															<xs:enumeration value="l"/>
															<xs:enumeration value="Pck."/>
														</xs:restriction>
													</xs:simpleType>
												</xs:attribute>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="Zubereitung">
								<xs:complexType>
									<xs:sequence>
										<xs:element name="Portionen" type="xs:int" minOccurs="1"/>
										<!-- Die Angaben von Arbeitszeit, sowie Ruhezeit sind auch hier in Attribute eingeteilt, um die Zeitangabe zur Vereinheitlichung einzugrenzen. -->
										<xs:element name="Arbeitszeit">
											<xs:complexType>
												<xs:attribute name="Dauer" type="xs:int"/>
												<xs:attribute name="Zeitangabe">
													<xs:simpleType>
														<xs:restriction base="xs:string">
															<xs:enumeration value="Min."/>
															<xs:enumeration value="Std."/>
														</xs:restriction>
													</xs:simpleType>
												</xs:attribute>
											</xs:complexType>
										</xs:element>
										<!-- Ruhezeit ist hier optional (minOccurs="0"), da nicht jedes Rezept eine Ruhezeit benötigt. -->
										<xs:element name="Ruhezeit" minOccurs="0">
											<xs:complexType>
												<xs:attribute name="Dauer" type="xs:int"/>
												<xs:attribute name="Zeitangabe">
													<xs:simpleType>
														<xs:restriction base="xs:string">
															<xs:enumeration value="Min."/>
															<xs:enumeration value="Std."/>
														</xs:restriction>
													</xs:simpleType>
												</xs:attribute>
											</xs:complexType>
										</xs:element>
										<!-- Um hier auch die Auswahl zu beschränken, Attribut "Typ" mit vordefinierten Auswahlmöglichkeiten. -->
										<xs:element name="Schwierigkeitsgrad">
											<xs:complexType>
												<xs:attribute name="Typ">
													<xs:simpleType>
														<xs:restriction base="xs:string">
															<xs:enumeration value="simpel"/>
															<xs:enumeration value="normal"/>
															<xs:enumeration value="pfiffig"/>
														</xs:restriction>
													</xs:simpleType>
												</xs:attribute>
											</xs:complexType>
										</xs:element>
										<xs:element name="Brennwert_p.P.">
											<xs:complexType>
												<xs:attribute name="Einheit">
													<xs:simpleType>
														<xs:restriction base="xs:string">
															<xs:enumeration value="kcal"/>
															<xs:enumeration value="keine Angabe"/>
														</xs:restriction>
													</xs:simpleType>
												</xs:attribute>
												<xs:attribute name="Menge" type="xs:int"/>
											</xs:complexType>
										</xs:element>
										<xs:element name="Zubereitungsschritte">
											<xs:complexType>
												<xs:sequence>
													<xs:element name="Zubereitungsschritt" type="xs:string" maxOccurs="unbounded"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="Kommentare" maxOccurs="1" minOccurs="0">
								<xs:complexType>
									<xs:sequence>
										<xs:element name="Kommentar" maxOccurs="unbounded" minOccurs="0">
											<xs:complexType>
												<xs:attribute name="Autor" type="xs:string"/>
												<xs:attribute name="Datum" type="xs:date"/>
												<xs:attribute name="Uhrzeit" type="xs:time"/>
												<xs:attribute name="Text" type="xs:string"/>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
</xs:schema>

<!-- unter element Zutat in dem Complex Type wird keine Sequence benötigt, da keine Elemente verwendet werden -->